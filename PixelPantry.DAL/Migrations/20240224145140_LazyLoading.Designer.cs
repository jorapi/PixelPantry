// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PixelPantry.DAL;

#nullable disable

namespace PixelPantry.DAL.Migrations
{
    [DbContext(typeof(PixelPantryContext))]
    [Migration("20240224145140_LazyLoading")]
    partial class LazyLoading
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PixelPantry.Core.Entities.Franchise", b =>
                {
                    b.Property<int>("FranchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FranchiseId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FranchiseId");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"));

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.HardDrive", b =>
                {
                    b.Property<int>("HardDriveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardDriveId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TotalCapacity")
                        .HasColumnType("bigint");

                    b.HasKey("HardDriveId");

                    b.ToTable("HardDrives");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.VideoFile", b =>
                {
                    b.Property<int>("VideoFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoFileId"));

                    b.Property<int>("Bitrate")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("FPS")
                        .HasColumnType("float");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("HDR")
                        .HasColumnType("bit");

                    b.Property<int>("HardDriveId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("time");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("VideoFileId");

                    b.HasIndex("GameId");

                    b.HasIndex("HardDriveId");

                    b.ToTable("VideoFiles");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.Game", b =>
                {
                    b.HasOne("PixelPantry.Core.Entities.Franchise", "Franchise")
                        .WithMany("Games")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.VideoFile", b =>
                {
                    b.HasOne("PixelPantry.Core.Entities.Game", "Game")
                        .WithMany("VideoFiles")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PixelPantry.Core.Entities.HardDrive", "HardDrive")
                        .WithMany("VideoFiles")
                        .HasForeignKey("HardDriveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("HardDrive");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.Franchise", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.Game", b =>
                {
                    b.Navigation("VideoFiles");
                });

            modelBuilder.Entity("PixelPantry.Core.Entities.HardDrive", b =>
                {
                    b.Navigation("VideoFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
